<% if (workList.length !=0) { %>
    <% for( let i=idx; i < (idx + maxViewOnPage); i++ ) { %>
        <% if (workList[i]) { %>
            <section class="box_item_2" onclick="showPopUp('listidx-<%-workList[i].id%>')">
                <br>
                <div class="userpage">
                    <div class="user_3">
                        <form action="" method="post" id="hoge">
                            <div class="user_box_1">
                                <a href="/creator_work/<%= workList[i].created_by_user_id %>" onclick="event.stopPropagation(); ">
                                    <table cellpadding="0" 　class="usertable">

                                        <tr>
                                            <th rowspan="4">
                                                <p class=user_img2><img src="<%= workList[i].creatorIconPath %>" alt="<%- workList[i].name %>" />
                                            </th>
                                            <td>　　　　　</td>
                                        </tr>
                                        <tr>
                                            <td>
                                                <p class="username"><%= workList[i].creatorName %></p>
                                            </td>
                                            <input type="hidden" name="">

                                        </tr>
                                        <tr>
                                            <td class="userid2">@<%= workList[i].created_by_user_id %>
                                            </td>
                                            <input type="hidden" name="">
                                        </tr>


                                    </table>
                                </a>
                            </div>
                        </form>
                    </div>
                </div>
                <div class=userpage>
                </div>
                <p class="date1">
                    <%# work.create_atをyyyy/mm/ddで表示する %>
                        <% const create_at=new Date(workList[i].create_at)%>
                            <%= create_at.getFullYear() + "/" + ('00' + (create_at.getMonth()+1)).slice(-2) + "/" +
                                ('00' + create_at.getDate()).slice(-2) %>
                </p>
                <div class="image_wrapper"><img src="<%= workList[i].thumbnail_path %>" alt="<%- workList[i].name %>" />
                </div>
                <p class="explanation">
                    <%- workList[i].baseCategoryName %> <br>「<%- workList[i].name %>」
                </p>
                <% if (typeof(workList[i].isFavorited) == "undefined") { %>
                    <div id="click" onclick="event.stopPropagation(); ">
                        <label><input type="checkbox" name="favorite" class="favStatusIdx-<%-workList[i].id%>" ><div class = "star2_1 pyon" onclick="selectFavorite('<%-workList[i].id%>', 'overView')">★</div></label>
                    </div> 
                    <% } else { %>
                        <% if (workList[i].isFavorited) { %>
                            <div id="click" onclick="event.stopPropagation(); ">
                                <label><input type="checkbox" name="favorite" class="favStatusIdx-<%-workList[i].id%>" checked><div class = "star2_1 pyon" onclick="selectFavorite('<%-workList[i].id%>', 'overView')">★</div></label>
                            </div> 
                            <% } else { %>
                                <div id="click" onclick="event.stopPropagation(); ">
                                    <label><input type="checkbox" name="favorite" class="favStatusIdx-<%-workList[i].id%>" ><div class = "star2_1 pyon" onclick="selectFavorite('<%-workList[i].id%>', 'overView')">★</div></label>
                                </div> 
                                <% } %>
                                    <% } %>

                                        <div class="favorite3">
                                            <p class="favorite2 favNumIdx-<%-workList[i].id%>" id="favNumIdx-<%-workList[i].id%>">
                                                <font size="4">
                                                    <%= workList[i].favoritedWorkNumber%>
                                                </font>
                                            </p>
                                        </div>
            </section>
            <% } %>
                <% } %>
                    <% } %>

                        <script>
                            // お気に入り処理
                            /**
                             * @param {string} id 作品id
                             * @param {string} where 呼び出し元
                             * @return {void}
                             */
                            function selectFavorite(id, where) {
                                const favViewNum = document.querySelectorAll(`.favNumIdx-${id}`);
                                const favStatus = document.querySelectorAll(`.favStatusIdx-${id}`);
                                axios.post(
                                    `/api/work/favorite/${id}`,
                                )
                                    .then(function (response) {
                                        console.log(response);
                                        // /api/work/getworkfavnumにPOSTし、返却値をalertで表示
                                        axios.post(
                                            `/api/work/getworkfavnum/`,
                                            {
                                                id: id
                                            }
                                        )
                                            .then(function (response) {
                                                console.log(response);
                                                // お気に入り数を表示
                                                // favViewNumの要素数分ループ
                                                for (let i = 0; i < favViewNum.length; i++) {
                                                    favViewNum[i].innerHTML = `<font size="4">${response.data.number}</font>`;
                                                    console.log(favStatus[i].checked);
                                                    if (where == "overView") {
                                                        if (favStatus[1].checked) {
                                                            favStatus[i].checked = false;
                                                        } else {
                                                            favStatus[i].checked = true;
                                                        }
                                                    } else {
                                                        if (favStatus[0].checked) {
                                                            favStatus[1 - i].checked = false;
                                                        } else {
                                                            favStatus[1 - i].checked = true;
                                                        }
                                                    }
                                                }
                                                // favViewNum.innerHTML = `<font size="4">${response.data}</font>`;
                                                // alert(response.data);
                                            })
                                            .catch(function (error) {
                                                console.log(error);
                                            });
                                        // location.reload();
                                    })
                                    .catch(function (error) {
                                        // httpStatusCodeを取得
                                        console.log(error.response.status);
                                        if (error.response.status == 401) {
                                            // favStatusのcheckedをfalseにする
                                            for (let i = 0; i < favStatus.length; i++) {
                                                favStatus[i].checked = false;
                                            }                                       
                                            alert("お気に入りに追加するには、ログインしてください。");
                                        }
                                    });
                                return;
                            }

                            function getFavStatus(){
                                const favViewNum = document.querySelectorAll(`.favNumIdx-${id}`);
                                axios.post(
                                    `/api/work/getworkfavnum/`,
                                    {
                                        id: id
                                    }
                                )
                                    .then(function (response) {
                                        console.log(response);
                                        // お気に入り数を表示
                                        // favViewNumの要素数分ループ
                                        for (let i = 0; i < favViewNum.length; i++) {
                                            favViewNum[i].innerHTML = `<font size="4">${response.data.number}</font>`;
                                        }
                                        // favViewNum.innerHTML = `<font size="4">${response.data}</font>`;
                                        // alert(response.data);
                                    })
                                    .catch(function (error) {
                                        console.log(error);
                                    });
                                return;
                            }
                        </script>